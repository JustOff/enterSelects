<?xml version="1.0"?>
<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/javascript">
  <![CDATA[
    addEventListener("load", function() {
      // Remember what auto-select if enter was hit after starting a search
      let autoSelectOn;

      // Add some helper functions to various objects
      let popup = gURLBar.popup;
      popup.__defineGetter__("noResults", function() {
        return this._matchCount == 0;
      });
      popup.__defineGetter__("selectedSearch", function() {
        if (this.selectedIndex == -1)
          return "";
        return this.richlistbox.selectedItem.getAttribute("text");
      });
      gURLBar.__defineGetter__("trimmedSearch", function() {
        return this.value.replace(/^\s+|\s+$/g, "");
      });
      gURLBar.hasURL = function() {
        // Potentially it's a url if there's no spaces
        let search = this.trimmedSearch;
        if (search.match(/ /) == null) {
          try {
            // Quit early if the input is already a URI
            return Cc["@mozilla.org/network/io-service;1"].
              getService(Ci.nsIIOService).newURI(gURLBar.value, null, null);
          }
          catch(ex) {}
    
          try {
            // Quit early if the input is domain-like (e.g., site.com/page)
            return Cc["@mozilla.org/network/effective-tld-service;1"].
              getService(Ci.nsIEffectiveTLDService).
              getBaseDomainFromHost(gURLBar.value);
          }
          catch(ex) {}
        }
      };

      // Wait for results to get added to the popup
      let (orig = popup._appendCurrentResult) {
        popup._appendCurrentResult = function() {
          // Run the original first to get results added
          orig.apply(this, arguments);

          // Don't bother if something is already selected
          if (popup.selectedIndex >= 0)
            return;

          // Make sure there's results
          if (popup.noResults)
            return;

          // Don't auto-select if we have a url
          if (gURLBar.hasURL())
            return;

          // We passed all the checks, so pretend the user has the first result
          // selected, so this causes the UI to show the selection style
          popup.selectedIndex = 0;

          // If the just-added result is what to auto-select, make it happen
          if (autoSelectOn == gURLBar.trimmedSearch) {
            gURLBar.controller.handleKeyNavigation(KeyEvent.DOM_VK_RIGHT);
            gURLBar.controller.handleEnter(false);

            // Clear out what to auto-select now that we've done it once
            autoSelectOn = null;
          }
        };
      }

      gURLBar.addEventListener("keydown", function(aEvent) {
        // Allow editing if the user moves left
        if (aEvent.keyCode == KeyEvent.DOM_VK_LEFT)
          popup.selectedIndex = -1;

        // Only interested in the user pressing enter (return)
        if (aEvent.keyCode != KeyEvent.DOM_VK_RETURN)
          return;

        // Ignore special key combinations
        if (aEvent.shiftKey || aEvent.ctrlKey || aEvent.metaKey)
          return;

        // Deselect if the selected result isn't for the current search
        if (!popup.noResults && popup.selectedSearch != gURLBar.trimmedSearch) {
          popup.selectedIndex = -1;

          // If it's not a url, we'll want to auto-select the first result
          if (!gURLBar.hasURL()) {
            autoSelectOn = gURLBar.trimmedSearch;

            // Don't load what's typed in the location bar because it's a search
            aEvent.preventDefault();
          }

          return;
        }

        // Pretend the user pressed right in the location bar which will cause
        // the selected index to be filled in. If the user has already pressed
        // down to some other selection, it'll just show the same value.
        gURLBar.controller.handleKeyNavigation(KeyEvent.DOM_VK_RIGHT);
      }, false);
    }, false);
  ]]>
  </script>
</overlay>
