<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl">
  <binding id="urlbar" extends="chrome://browser/content/urlbarBindings.xml#urlbar">
    <handlers>
      <handler event="keypress" phase="capturing">
      <![CDATA[
        // Get what the user typed into the location bar
        let v = this.value;

        // We might need to quit early if there is *no* spaces in the input
        if (v.match(/ /) === null) {
          try {
            // Quit early if the input is already a URI
            return Components.classes["@mozilla.org/network/io-service;1"].
                   getService(Components.interfaces.nsIIOService).
                   newURI(v, null, null);
          }
          catch (e) { }
  
          try {
            // Quit early if the input is domain-like (e.g., site.com/page)
            return Components.classes["@mozilla.org/network/effective-tld-service;1"].
                   getService(Components.interfaces.nsIEffectiveTLDService).
                   getBaseDomainFromHost(v);
          }
          catch (e) { }
        }

        let (e = event, _ = this.popup)
          // Make sure there's no unwanted special modifiers on the key press
          !(this.disableKeyNavigation || e.shiftKey || e.ctrlKey || e.metaKey) &&
          // We're only looking for the user hitting enter
          e.keyCode == KeyEvent.DOM_VK_RETURN &&
          // Nothing is selected in the open popup with results?
          _.selectedIndex == -1 && _.popupOpen && _._matchCount > 0 &&
          // Pretend the user pressed down just before pressing return
          this.mController.handleKeyNavigation(KeyEvent.DOM_VK_DOWN);
      ]]>
      </handler>
    </handlers>
  </binding>
</bindings>
